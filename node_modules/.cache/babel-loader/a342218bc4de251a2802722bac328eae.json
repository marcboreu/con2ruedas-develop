{"ast":null,"code":"var _jsxFileName = \"/Users/marcboreu/Desktop/Webs - Develop/test app/con2ruedas/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clientConfig from \"../client-config\";\nimport axios from \"axios\";\nimport Loader from \"./layouts/Loader\";\nimport { Post } from \"./layouts/Post\";\nimport { Pagination } from \"./layouts/Pagination\";\nimport PostLoader from \"./layouts/PostLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Posts = props => {\n  _s();\n\n  const pageId = parseInt(props.pageId);\n  const [currentPage, setCurrentPage] = useState(pageId);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [errMessage, setError] = useState('');\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    const wordPressSiteURL = clientConfig.siteUrl;\n    setLoading(true);\n    axios.get(`${wordPressSiteURL}/wp-json/rae/v1/posts?page_no=${currentPage}`).then(res => {\n      setLoading(false);\n\n      if (200 === res.data.status) {\n        setPosts(res.data.posts_data);\n        setTotalPages(res.data.page_count);\n      } else {\n        setError('No posts found');\n      }\n    }).catch(err => {\n      setError(err.response.data.message);\n    });\n  }, [currentPage]);\n\n  const getPosts = posts => {\n    return posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(PostLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container blog\",\n      style: {\n        overflow: 'hidden'\n      },\n      children: !loading && null !== posts && posts.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [getPosts(posts), /*#__PURE__*/_jsxDEV(Pagination, {\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage,\n          totalPages: totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Posts, \"1N5vroB9vUpVrwAxXGpFuCO15aU=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/marcboreu/Desktop/Webs - Develop/test app/con2ruedas/src/components/Posts.js"],"names":["React","useState","useEffect","clientConfig","axios","Loader","Post","Pagination","PostLoader","Posts","props","pageId","parseInt","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","errMessage","setError","posts","setPosts","wordPressSiteURL","siteUrl","get","then","res","data","status","posts_data","page_count","catch","err","response","message","getPosts","map","post","id","overflow","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clientConfig from \"../client-config\";\nimport axios from \"axios\";\nimport Loader from \"./layouts/Loader\";\nimport { Post } from \"./layouts/Post\";\nimport { Pagination } from \"./layouts/Pagination\";\nimport PostLoader from \"./layouts/PostLoader\";\n\nexport const Posts = ( props ) => {\n\n\tconst pageId = parseInt( props.pageId );\n\n\tconst [currentPage, setCurrentPage] = useState( pageId );\n\n\tconst [totalPages, setTotalPages] = useState( 1 );\n\tconst [loading, setLoading]       = useState( false );\n\tconst [errMessage, setError]      = useState( '' );\n\tconst [posts, setPosts]           = useState( null );\n\n\tuseEffect( () => {\n\n\t\tconst wordPressSiteURL = clientConfig.siteUrl;\n\n\t\tsetLoading( true );\n\n\t\taxios.get( `${ wordPressSiteURL }/wp-json/rae/v1/posts?page_no=${ currentPage }` )\n\t\t\t.then( res => {\n\n\t\t\t\tsetLoading( false );\n\n\t\t\t\tif ( 200 === res.data.status ) {\n\t\t\t\t\tsetPosts( res.data.posts_data );\n\t\t\t\t\tsetTotalPages( res.data.page_count )\n\t\t\t\t} else {\n\t\t\t\t\tsetError( 'No posts found' );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tsetError( err.response.data.message );\n\t\t\t} );\n\n\t}, [currentPage] );\n\n\tconst getPosts = ( posts ) => {\n\t\treturn posts.map( post => <Post key={ post.id } post={ post }/> );\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{ loading ? <PostLoader/> : '' }\n\t\t\t<div className=\"container blog\" style={ { overflow: 'hidden' } }>\n\t\t\t\t{ ( !loading && null !== posts && posts.length ) ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t{ getPosts( posts ) }\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tcurrentPage={ currentPage }\n\t\t\t\t\t\t\tsetCurrentPage={ setCurrentPage }\n\t\t\t\t\t\t    totalPages={ totalPages }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : <div>{ errMessage }</div> }\n\t\t\t</div>\n\t\t</React.Fragment>\n\t)\n\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}